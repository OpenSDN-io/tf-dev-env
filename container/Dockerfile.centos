ARG LINUX_DISTR=centos
ARG LINUX_DISTR_VER=7
FROM $LINUX_DISTR:$LINUX_DISTR_VER

ARG SITE_MIRROR
ARG LC_ALL=en_US.UTF-8
ARG LANG=en_US.UTF-8
ARG LANGUAGE=en_US.UTF-8

ENV USER root
ENV HOME /root
ENV CONTRAIL $HOME/contrail
ENV LC_ALL=$LC_ALL
ENV LANG=$LANG
ENV LANGUAGE=$LANGUAGE
ENV PS1="sandbox:\[\033[01;34m\]\w\[\033[00m\]\$ "

WORKDIR $CONTRAIL

# Inject repositories that we might need
# copy pip.conf to the same place and move it to right place later to simplify build script
COPY *.repo pip.conf* /etc/yum.repos.d/

# NOTE: we have to remove /usr/local/bin/virtualenv after installing tox by python3 because it has python3 as shebang and masked
# /usr/bin/virtualenv with python2 shebang. it can be removed later when all code will be ready for python3
# NOTE: pin nss version due to bug https://bugzilla.redhat.com/show_bug.cgi?id=1896808
RUN if ! yum info jq ; then yum -y install epel-release ; fi && \
    if [ -f /etc/yum.repos.d/pip.conf ] ; then mv /etc/yum.repos.d/pip.conf /etc/ ; fi && \
    yum -y update -x nss* && \
    yum -y downgrade nss* && \
    curl --retry 3 --retry-delay 10 ${SITE_MIRROR:-"https://bootstrap.pypa.io"}/pip/2.7/get-pip.py | python2 - 'pip==20.1' && \
    yum -y install centos-release-scl && \
    yum -y install \
        python3 iproute devtoolset-7-gcc devtoolset-7-binutils \
        autoconf automake createrepo docker-client docker-python gdb git git-review jq libtool \
        make python-devel python-lxml rpm-build vim wget yum-utils redhat-lsb-core \
        rpmdevtools sudo gcc-c++ net-tools httpd \
        python-virtualenv python-future python-tox \
        elfutils-libelf-devel && \
    yum clean all && \
    rm -rf /var/cache/yum && \
    pip3 install --retries=10 --timeout 200 --upgrade tox setuptools lxml jinja2 && \
    rm -f /usr/local/bin/virtualenv

ADD entrypoint.sh /

RUN echo export CONTRAIL=$CONTRAIL >> $HOME/.bashrc && \
    echo export LD_LIBRARY_PATH=$CONTRAIL/build/lib >> $HOME/.bashrc && \
    wget -nv ${SITE_MIRROR:-"https://dl.google.com"}/go/go1.14.2.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.14.2.linux-amd64.tar.gz && \
    rm -f go1.14.2.linux-amd64.tar.gz && \
    echo export PATH=$PATH:/usr/local/go/bin >> $HOME/.bashrc && \
    wget -nv ${SITE_MIRROR:-"https://github.com"}/operator-framework/operator-sdk/releases/download/v0.17.2/operator-sdk-v0.17.2-x86_64-linux-gnu -O /usr/local/bin/operator-sdk && \
    chmod u+x /usr/local/bin/operator-sdk

ENTRYPOINT ["/entrypoint.sh"]
